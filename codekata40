function solution(today, terms, privacies) {
    let answer = [];
    
    // Function to convert date "YYYY.MM.DD" to the number of days since a base date
    function dateToDays(date) {
        const [year, month, day] = date.split('.').map(Number);
        return year * 12 * 28 + month * 28 + day;
    }
    
    // Today's date in days
    const todayDays = dateToDays(today);
    
    // Map to store terms and their expiry periods in months
    let termsMap = new Map();
    for (const term of terms) {
        const [type, period] = term.split(' ');
        termsMap.set(type, parseInt(period));
    }
    
    // Check each privacy entry
    for (let i = 0; i < privacies.length; i++) {
        const [date, type] = privacies[i].split(' ');
        const expiryMonths = termsMap.get(type);
        const collectedDays = dateToDays(date);
        
        // Calculate the expiry date in days
        const expiryDays = collectedDays + expiryMonths * 28;
        
        // If the expiry date has passed, add the index to the answer list (index is i + 1)
        if (expiryDays <= todayDays) {
            answer.push(i + 1);
        }
    }
    
    return answer;
}

// Example usage
console.log(solution("2022.05.19", ["A 6", "B 12", "C 3"], ["2021.05.02 A", "2021.07.01 B", "2022.02.19 C", "2022.02.20 C"]));
// Output: [1, 3]

console.log(solution("2020.01.01", ["Z 3", "D 5"], ["2019.01.01 D", "2019.11.15 Z", "2019.08.02 D", "2019.07.01 D", "2018.12.28 Z"]));
// Output: [1, 4, 5]
