function solution(answers) {
    // Define the answer patterns for each supoja
    const pattern1 = [1, 2, 3, 4, 5];
    const pattern2 = [2, 1, 2, 3, 2, 4, 2, 5];
    const pattern3 = [3, 3, 1, 1, 2, 2, 4, 4, 5, 5];
    
    // Initialize the correct answers count for each supoja
    let correctCount1 = 0;
    let correctCount2 = 0;
    let correctCount3 = 0;
    
    // Loop through the answers and count correct answers for each supoja
    for (let i = 0; i < answers.length; i++) {
        if (answers[i] === pattern1[i % pattern1.length]) correctCount1++;
        if (answers[i] === pattern2[i % pattern2.length]) correctCount2++;
        if (answers[i] === pattern3[i % pattern3.length]) correctCount3++;
    }
    
    // Find the maximum number of correct answers
    const maxCorrect = Math.max(correctCount1, correctCount2, correctCount3);
    
    // Collect the indices of supojas with the maximum correct answers
    const result = [];
    if (correctCount1 === maxCorrect) result.push(1);
    if (correctCount2 === maxCorrect) result.push(2);
    if (correctCount3 === maxCorrect) result.push(3);
    
    return result;
}

// Example usage:
console.log(solution([1, 2, 3, 4, 5])); // Output: [1]
console.log(solution([1, 3, 2, 4, 2])); // Output: [1, 2, 3]
