function solution(sizes) {
    let max_width = 0;
    let max_height = 0;
    
    for (let i = 0; i < sizes.length; i++) {
        let w = sizes[i][0];
        let h = sizes[i][1];
        
        // Ensure w is always the larger dimension (acting as width)
        if (w < h) {
            let temp = w;
            w = h;
            h = temp;
        }
        
        // Update the maximum width and height required
        max_width = Math.max(max_width, w);
        max_height = Math.max(max_height, h);
    }
    
    // The area of the wallet needed to fit all cards
    return max_width * max_height;
}

// Test cases
console.log(solution([[60, 50], [30, 70], [60, 30], [80, 40]])); // Output: 4000
console.log(solution([[10, 7], [12, 3], [8, 15], [14, 7], [5, 15]])); // Output: 120
console.log(solution([[14, 4], [19, 6], [6, 16], [18, 7], [7, 11]])); // Output: 133
